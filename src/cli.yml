name: git-credential-keepassxc
about: Middleware that allows Git to use KeePassXC as credential store
args:
  - config:
      long: config
      short: c
      help: Specify configuration JSON file path
      takes_value: true
  - socket:
      long: socket
      short: s
      help: Specify KeePassXC socket path
      takes_value: true
  - unlock:
      long: unlock
      help: |-
        Try unlocking database, applies to get, store and erase only.
        Takes one argument in the format of [<MAX_RETRIES>[,<INTERVAL_MS>]]. Use 0 to retry indefinitely. The default interval is 1000ms.
      takes_value: true
  - verbose:
      short: v
      multiple: true
      help: "Sets the level of verbosity (-v: WARNING; -vv: INFO; -vvv: DEBUG in debug builds)"
subcommands:
  - get:
      about: Get credential (used by Git)
  - store:
      about: Store credential (used by Git)
  - erase:
      about: "[Not implemented] Erase credential (used by Git)"
  - configure:
      about: Associate git-credential-keepassxc with KeePassXC and configure preferences
      args:
        - group:
            long: group
            help: Name of group where new credentials are stored
            default_value: Git
            takes_value: true
        - encrypt:
            long: encrypt
            help: |-
              Encrypt KeePassXC database profiles.
              Only YubiKey challenge-response is supported at the moment (challenge-response[:SLOT[:CHALLENGE]], by default Slot 2 is used with a randomly generated challenge).
              Leave empty ("") to use existing encryption profile in configuration file.
            takes_value: true
  - encrypt:
      about: Encrypt existing database and caller profile(s)
      args:
        - ENCRYPTION_PROFILE:
            help: |-
              Encrypt KeePassXC database profiles.
              Only YubiKey challenge-response is supported at the moment (challenge-response[:SLOT[:CHALLENGE]], by default Slot 2 is used with a randomly generated challenge).
            index: 1
  - decrypt:
      about: Decrypt existing database and caller profile(s)
  - caller:
      about: Limit caller process
      subcommands:
        - add:
            about: Add a new allowed caller
            args:
              - PATH:
                  help: Absolute path of the caller executable
                  required: true
                  index: 1
              - uid:
                  long: uid
                  help: UID of the caller process (ignored under Windows)
                  takes_value: true
              - gid:
                  long: gid
                  help: GID of the caller process (ignored under Windows)
                  takes_value: true
              - canonicalize:
                  long: canonicalize
                  help: Additionally compare canonical caller paths during verification
              - encrypt:
                  long: encrypt
                  help: |-
                    Encrypt caller profiles.
                    Only YubiKey challenge-response is supported at the moment (challenge-response[:SLOT[:CHALLENGE]], by default Slot 2 is used with a randomly generated challenge).
                    Leave empty ("") to use existing encryption profile in configuration file.
                  takes_value: true
        - clear:
            about: Clear the allowed callers list
